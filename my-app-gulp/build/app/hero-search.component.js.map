{"version":3,"sources":["../../src/app/hero-search.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAkD;AAClD,0CAAoD;AAEpD,8CAAoD;AACpD,wCAAiD;AAEjD,8BAA8B;AAC9B,kCAAgC;AAEhC,uBAAuB;AACvB,mCAAiC;AACjC,0CAAwC;AACxC,kDAAgD;AAEhD,6DAA0D;AAS1D,IAAa,mBAAmB;IAI9B,6BACU,iBAAoC,EACpC,MAAc;QADd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QAJhB,gBAAW,GAAG,IAAI,iBAAO,EAAU,CAAC;IAIjB,CAAC;IAE5B,iDAAiD;IACjD,oCAAM,GAAN,UAAO,IAAY;QACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW;aAC3B,YAAY,CAAC,GAAG,CAAC,CAAQ,8DAA8D;aACvF,oBAAoB,EAAE,CAAG,iDAAiD;aAC1E,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAG,sDAAsD;cAE5E,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC;cAEnC,uBAAU,CAAC,EAAE,CAAS,EAAE,CAAC,EAJV,CAIU,CAAC;aAC7B,KAAK,CAAC,UAAA,KAAK;YACV,gCAAgC;YAChC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAS,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAU,GAAV,UAAW,IAAU;QACnB,IAAI,IAAI,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACH,0BAAC;AAAD,CAjCA,AAiCC,IAAA;AAjCY,mBAAmB;IAN/B,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,WAAW,EAAE,kCAAkC;QAC/C,SAAS,EAAE,CAAE,iCAAiC,CAAE;QAChD,SAAS,EAAE,CAAC,uCAAiB,CAAC;KAC/B,CAAC;qCAM6B,uCAAiB;QAC5B,eAAM;GANb,mBAAmB,CAiC/B;AAjCY,kDAAmB","file":"hero-search.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router }            from '@angular/router';\n\nimport { Observable }        from 'rxjs/Observable';\nimport { Subject }           from 'rxjs/Subject';\n\n// Observable class extensions\nimport 'rxjs/add/observable/of';\n\n// Observable operators\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport { HeroSearchService } from './hero-search.service';\nimport { Hero } from './hero';\n\n@Component({\n  selector: 'hero-search',\n  templateUrl: './app/hero-search.component.html',\n  styleUrls: [ './app/hero-search.component.css' ],\n  providers: [HeroSearchService]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(\n    private heroSearchService: HeroSearchService,\n    private router: Router) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes = this.searchTerms\n      .debounceTime(300)        // wait 300ms after each keystroke before considering the term\n      .distinctUntilChanged()   // ignore if next search term is same as previous\n      .switchMap(term => term   // switch to new observable each time the term changes\n        // return the http search observable\n        ? this.heroSearchService.search(term)\n        // or the observable of empty heroes if there was no search term\n        : Observable.of<Hero[]>([]))\n      .catch(error => {\n        // TODO: add real error handling\n        console.log(error);\n        return Observable.of<Hero[]>([]);\n      });\n  }\n\n  gotoDetail(hero: Hero): void {\n    let link = ['/detail', hero.id];\n    this.router.navigate(link);\n  }\n}\n"],"sourceRoot":"/src"}